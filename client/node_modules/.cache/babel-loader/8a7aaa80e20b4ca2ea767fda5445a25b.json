{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12345\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\Pet_prjs\\\\Online_Shop\\\\client\\\\src\\\\component\\\\router\\\\AppRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { privateRoutes, publicRoutes, RoutesName } from \"../../routes/router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    isAuth\n  } = useTypedSelector(state => state.user);\n  return isAuth ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      path: route.path,\n      exact: route.exact,\n      component: route.component\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: RoutesName.HOME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      path: route.path,\n      exact: route.exact,\n      component: route.component\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: RoutesName.HOME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AppRouter, \"0F5tgXTFubRr4DmGg8Ut734G9rk=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/12345/Desktop/Программирование/Pet_prjs/Online_Shop/client/src/component/router/AppRouter.tsx"],"names":["React","useTypedSelector","Redirect","Route","Switch","privateRoutes","publicRoutes","RoutesName","AppRouter","isAuth","state","user","map","route","path","exact","component","HOME"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,SAAQC,aAAR,EAAuBC,YAAvB,EAAqCC,UAArC,QAAsD,qBAAtD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAACC,IAAAA;AAAD,MAAWR,gBAAgB,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AAEA,SACIF,MAAM,gBAEF,QAAC,MAAD;AAAA,eACKJ,aAAa,CAACO,GAAd,CAAkBC,KAAK,iBACpB,QAAC,KAAD;AAEI,MAAA,IAAI,EAAIA,KAAK,CAACC,IAFlB;AAGI,MAAA,KAAK,EAAID,KAAK,CAACE,KAHnB;AAII,MAAA,SAAS,EAAIF,KAAK,CAACG;AAJvB,OACWH,KAAK,CAACC,IADjB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAQI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAIP,UAAU,CAACU;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,gBAaF,QAAC,MAAD;AAAA,eACKX,YAAY,CAACM,GAAb,CAAiBC,KAAK,iBACnB,QAAC,KAAD;AAEI,MAAA,IAAI,EAAIA,KAAK,CAACC,IAFlB;AAGI,MAAA,KAAK,EAAID,KAAK,CAACE,KAHnB;AAII,MAAA,SAAS,EAAIF,KAAK,CAACG;AAJvB,OACWH,KAAK,CAACC,IADjB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAQI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAIP,UAAU,CAACU;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAdR;AAyBH,CA7BD;;GAAMT,S;UAEeP,gB;;;KAFfO,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {privateRoutes, publicRoutes, RoutesName} from \"../../routes/router\";\n\nconst AppRouter = () => {\n\n    const {isAuth} = useTypedSelector(state => state.user)\n\n    return (\n        isAuth\n            ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route\n                        key = {route.path}\n                        path = {route.path}\n                        exact = {route.exact}\n                        component = {route.component}/>\n                )}\n                <Redirect to = {RoutesName.HOME} />\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route =>\n                    <Route\n                        key = {route.path}\n                        path = {route.path}\n                        exact = {route.exact}\n                        component = {route.component}/>\n                )}\n                <Redirect to = {RoutesName.HOME} />\n            </Switch>\n    );\n};\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}