{"ast":null,"code":"import { UserActionEnum } from \"./types\";\nimport { sumStringNumber } from \"../../../helperFunction/sumStringNumber\";\nconst initialState = {\n  isAuth: true,\n  cash: '0',\n  user: {},\n  basket: {}\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UserActionEnum.LOGIN:\n      return { ...state,\n        user: action.payload\n      };\n\n    case UserActionEnum.SET_AUT:\n      return { ...state,\n        isAuth: action.payload\n      };\n\n    case UserActionEnum.SET_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case UserActionEnum.ADD_CASH:\n      return { ...state,\n        cash: (parseInt(state.cash) + parseInt(action.payload)).toString()\n      };\n\n    case UserActionEnum.REMOVE_CASH:\n      return { ...state,\n        cash: sumStringNumber(state.cash, action.payload)\n      };\n\n    case UserActionEnum.ADD_ITEM_BASKET:\n      return { ...state,\n        basket: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/12345/Desktop/Программирование/Pet_prjs/react-pet-3/src/store/reducer/user/index.ts"],"names":["UserActionEnum","sumStringNumber","initialState","isAuth","cash","user","basket","userReducer","state","action","type","LOGIN","payload","SET_AUT","SET_USER","ADD_CASH","parseInt","toString","REMOVE_CASH","ADD_ITEM_BASKET"],"mappings":"AAAA,SAAoBA,cAApB,QAAoD,SAApD;AAGA,SAAQC,eAAR,QAA8B,yCAA9B;AAEA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,MAAM,EAAE,IADoB;AAE5BC,EAAAA,IAAI,EAAE,GAFsB;AAG5BC,EAAAA,IAAI,EAAE,EAHsB;AAI5BC,EAAAA,MAAM,EAAE;AAJoB,CAAhC;;AAQA,MAAMC,WAAW,GAAG,YAAwD;AAAA,MAAvDC,KAAuD,uEAA/CN,YAA+C;AAAA,MAAjCO,MAAiC;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,cAAc,CAACW,KAApB;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAAxB,OAAP;;AACJ,SAAKZ,cAAc,CAACa,OAApB;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWL,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAA1B,OAAP;;AACJ,SAAKZ,cAAc,CAACc,QAApB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAAxB,OAAP;;AACJ,SAAKZ,cAAc,CAACe,QAApB;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAWJ,QAAAA,IAAI,EAAE,CAACY,QAAQ,CAACR,KAAK,CAACJ,IAAP,CAAR,GAAuBY,QAAQ,CAACP,MAAM,CAACG,OAAR,CAAhC,EAAkDK,QAAlD;AAAjB,OAAP;;AACJ,SAAKjB,cAAc,CAACkB,WAApB;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWJ,QAAAA,IAAI,EAAEH,eAAe,CAACO,KAAK,CAACJ,IAAP,EAAYK,MAAM,CAACG,OAAnB;AAAhC,OAAP;;AACJ,SAAKZ,cAAc,CAACmB,eAApB;AACI,aAAO,EAAC,GAAGX,KAAJ;AAAWF,QAAAA,MAAM,EAAEG,MAAM,CAACG;AAA1B,OAAP;;AACJ;AACI,aAAOJ,KAAP;AAdR;AAgBH,CAjBD;;AAkBA,eAAeD,WAAf","sourcesContent":["import {UserAction, UserActionEnum, UserState} from \"./types\";\nimport {IUser} from \"../../../models/IUser\";\nimport {IBasket} from \"../../../models/IBasket\";\nimport {sumStringNumber} from \"../../../helperFunction/sumStringNumber\";\n\nconst initialState: UserState = {\n    isAuth: true,\n    cash: '0',\n    user: {} as IUser,\n    basket: {} as IBasket\n}\n\n\nconst userReducer = (state = initialState, action:UserAction):UserState =>  {\n    switch (action.type) {\n        case UserActionEnum.LOGIN:\n            return {...state, user: action.payload}\n        case UserActionEnum.SET_AUT:\n            return {...state, isAuth: action.payload}\n        case UserActionEnum.SET_USER:\n            return {...state, user: action.payload}\n        case UserActionEnum.ADD_CASH:\n            return {...state, cash: (parseInt(state.cash) + parseInt(action.payload)).toString()}\n        case UserActionEnum.REMOVE_CASH:\n            return {...state, cash: sumStringNumber(state.cash,action.payload)}\n        case UserActionEnum.ADD_ITEM_BASKET:\n            return {...state, basket: action.payload}\n        default:\n            return state\n    }\n}\nexport default userReducer"]},"metadata":{},"sourceType":"module"}